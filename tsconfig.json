{
  "compilerOptions": {
    /* Project Options */
    "target": "ES2020",             /* Specify ECMAScript target version: "ES3" (default), "ES5", "ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020", "ES2021", "ESNext". */
    "module": "ESNext",             /* Specify module code generation: "None", "CommonJS", "AMD", "System", "UMD", "ES6", "ES2015", "ES2020", "ES2022", "ESNext", "Node16", "NodeNext". */
    //"lib": ["ES2020"],              /* Specify a list of library files to be included in the compilation. */,
    "outDir": "./dist",         /* Redirect output structure to the directory. This will be for ES Modules. */
    "declaration": true,            /* Generates corresponding '.d.ts' file. */
    //"declarationMap": true,         /* Generates a sourcemap for each '.d.ts' file. */
    //"sourceMap": true,              /* Generates corresponding '.map' file. */
    //"rootDir": "./src",             /* Specify the root directory of input files. */
    //"composite": true,              /* Enable project compilation. Useful for monorepos or larger projects. */

    /* Module Resolution Options */
   // "moduleResolution": "Node",     /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). "Node16" or "NodeNext" are more modern options. */
   // "baseUrl": "./",                /* Base directory to resolve non-absolute module names. */
   // "paths": {                      /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
   //   // "@utils/*": ["src/utils/*"] // Example: if you have internal aliases
   // },
   "esModuleInterop": true,        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
   // "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
   // "resolveJsonModule": true,      /* Allow importing modules with a '.json' extension. */
//
   // /* Strict Type-Checking Options */
    "strict": true,                 /* Enable all strict type-checking options. */
   // "noImplicitAny": true,          /* Raise error on expressions and declarations with an implied 'any' type. */
   // "strictNullChecks": true,       /* Enable strict null checks. */
   // "strictFunctionTypes": true,    /* Enable strict checking of function types. */
   // "strictBindCallApply": true,    /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
   // "strictPropertyInitialization": true, /* Enable strict checking of property initialization in classes. */
   // "noImplicitThis": true,         /* Raise error on 'this' expressions with an implied 'any' type. */
   // "alwaysStrict": true,           /* Parse in strict mode and emit "use strict" for each source file. */
   // "noUnusedLocals": true,         /* Report errors on unused locals. */
   // "noUnusedParameters": true,     /* Report errors on unused parameters. */
   // "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statement. */
   // "noImplicitReturns": true,      /* Report error when not all code paths in function return a value. */
    "noUncheckedIndexedAccess": true, /* Include 'undefined' in index signature results. */
   // "noImplicitOverride": true,     /* Ensure overriding members in derived classes are marked with an 'override' modifier. */
//
   // /* Emit Options */
    "skipLibCheck": true,           /* Skip type checking of all declaration files (*.d.ts). Speeds up compilation. */
   // "importHelpers": true,          /* Import emit helpers (e.g. __extends, __awaiter) from 'tslib'. */
   // "downlevelIteration": true      /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "removeComments": true,       /* Do not emit comments to output. (Often handled by bundlers) */

    /* Incremental Compilation */
    // "incremental": true,          /* Enable incremental compilation. */
    // "tsBuildInfoFile": "./.tsbuildinfo" /* Specify file to store incremental compilation information. */
  },
//  "include": [
//    "src/**/*.ts"                   /* Include all .ts files in the src directory */
//  ],
//  "exclude": [
//    "node_modules",
//    "dist",
//    "**/*.spec.ts",                 /* Exclude test files */
//    "**/*.test.ts"                  /* Exclude test files */
//  ]
}